<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAPq8AAD6vAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAALAAAAOAAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAA
        AD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgAAADyAAAA8gAAAPEAAADxAAAA8QAAAPEAAADxAAAA8QAA
        APEAAADxAAAA8QAAAPEAAADxAAAA8QAAAPEAAADxAAAA9wAAAKEAAAAEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaQAAAOwAAABjAAAATAAAAE4AAABOAAAATgAA
        AE4AAABOAAAATgAAAE4AAABOAAAATgAAAE4AAABOAAAATgAAAEwAAAC5AAAA0AAAAEMAAAA9AAAAPQAA
        AD0AAAA9AAAAPgAAADIAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABqAAAA4gAAAB4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJYAAAD/AAAA9wAA
        APYAAAD2AAAA9gAAAPYAAAD3AAAA6gAAAEcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGoAAADiAAAAHgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmQAA
        ANwAAABuAAAAaQAAAGkAAABpAAAAZwAAAI8AAAD5AAAAXwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAagAA
        AOIAAAAeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACaAAAAwAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAPwAAAPUAAABeAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABqAAAA4gAAAB4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAJsAAADAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAA/AAAA9QAAAF4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAGoAAADiAAAAHgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAEAAAAsAAAAMAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAD8AAAD1AAAAXgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAaAAAAOoAAAAqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0AAADKAAAArgAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAPwAA
        APUAAABfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEAAAA8wAAAFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJwAAAOkAAACNAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABBAAAA8gAAAFEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIAAADHAAAAtwAAAA4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABpAAAA8wAAAEoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAGcAAADtAAAAMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFwAAADyAAAAhwAA
        AAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQgAAAN8AAACwAAAACwAA
        AAAAAAAAAAAAAAAAAAAAAAAUAAAAwAAAALsAAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAA
        AIoAAAD1AAAAowAAADAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAJAAAAHYAAADiAAAAzAAA
        AC0AAAAAAAAAAAAAAAAAAAAAAAAAEQAAAJUAAADuAAAAUQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAADAAAAHIAAADkAAAA6AAAAK0AAACKAAAAbQAAAGoAAABrAAAAiAAAAK0AAADiAAAA/AAA
        AP4AAACRAAAAMAAAACcAAAAnAAAANAAAAGEAAADAAAAA8AAAAG8AAAAEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAACkAAACVAAAA+gAAAP8AAAD3AAAA5gAAAPAAAAD+AAAA/wAA
        AMIAAABeAAAAvAAAAP4AAADyAAAA6AAAAOgAAADzAAAA/AAAAMMAAABRAAAABQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAAAAL0AAADoAAAAigAAAEMAAAAjAAAAMgAA
        AGkAAADQAAAA4gAAAGoAAAC6AAAA7AAAAJcAAABqAAAAbgAAAKoAAAD2AAAAlgAAAAcAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAACyAAAA4AAAAEgAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAACMAAAC4AAAA/QAAAOAAAABLAAAAAgAAAAAAAAAAAAAABwAAAHAAAADrAAAAXAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWgAAAPQAAABjAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADEAAADmAAAApQAAAAIAAAAAAAAAAAAAAAAAAAAAAAAABQAA
        AJ8AAAC4AAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAACmAAAAzgAA
        ABMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQAAADRAAAAEwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAVAAAANoAAAAdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAA
        AMkAAACfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAawAAAOwAAAAsAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABDAAAA2QAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAOAAAAzAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABqAAAA8QAA
        ADUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG8AAADPAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAUAAAC0AAAAwgAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AIgAAADpAAAAJgAAAAAAAAAAAAAAAAAAAAAAAAAfAAAAywAAAI4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHIAAADzAAAATQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAiAAAA1QAAAP0AAACiAAAALwAAAAoAAAANAAAAQAAAAL8AAADNAAAAJQAAAAAAAAAEAAAADQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQAAANEAAADRAAAAMQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAEwAAAKAAAADgAAAAigAAAOAAAADpAAAAxwAAAMwAAADrAAAAuQAAAC8AAAAAAAAAAAAA
        AEsAAACwAAAAFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASQAAAOUAAADXAAAAZQAA
        ACIAAAAOAAAAGgAAAE8AAAC+AAAA8AAAAGYAAAABAAAAKgAAAGwAAACWAAAAhgAAAFMAAAARAAAAAAAA
        AAAAAAAAAAAAagAAAOgAAAAnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQQAA
        AL8AAAD3AAAA5QAAAMwAAADdAAAA9QAAANAAAABXAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAUgAAAJoAAADEAAAA9gAAAKoAAACVAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAEQAAAE0AAACAAAAAmwAAAIcAAABXAAAAGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABoAAAAxgAAAN0AAAD6AAAAzgAAAL8AAAA/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAEAAAAcAAAAOkAAAAvAAAABgAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZAAAAzgAAAB0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAlAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////4AAD/+AAAf/gAAAD4//wA+P/8APj//Hj4//x4+P/4ePj/+Hj4//
        j4+H/4+Pw/8PD8D4Hh/gAAAf8AAAP/gAAH/weBh/8fw8P+H+Pj/j/j4/4/4+P+H+PH/x/ABP8PgAx/gA
        Acf8AP8B/gP/Af///wH////H////x/////8=
</value>
  </data>
</root>